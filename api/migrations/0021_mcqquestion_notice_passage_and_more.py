# Generated by Django 5.0.14 on 2025-05-17 10:06

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0020_studentsection_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MCQQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General'), ('academic', 'Academic'), ('event', 'Event'), ('announcement', 'Announcement'), ('maintenance', 'Maintenance')], max_length=20)),
                ('publish_date', models.DateTimeField()),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('important', models.BooleanField(default=False)),
                ('attachment_url', models.FileField(blank=True, default='notice_section.jpg', null=True, upload_to='notice-section-file')),
                ('attachment_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Passage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='mcqanswer',
            name='selected_answer',
        ),
        migrations.RemoveField(
            model_name='mcqanswer',
            name='submitted_at',
        ),
        migrations.RemoveField(
            model_name='mcqanswer',
            name='user',
        ),
        migrations.AddField(
            model_name='mcqanswer',
            name='answer_text',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='mcqanswer',
            name='is_right',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='mcqanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcq_answers', to='api.mcqquestion'),
        ),
        migrations.AddField(
            model_name='mcqquestion',
            name='passage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcq_questions', to='api.passage'),
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField()),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('passage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.passage')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.mcqquestion')),
                ('selected_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='api.mcqanswer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'passage', 'question')},
            },
        ),
    ]
