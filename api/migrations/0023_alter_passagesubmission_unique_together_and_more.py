# Generated by Django 5.0.14 on 2025-05-19 12:43

import api.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0022_passage_time_limit_alter_mcqanswer_answer_text_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='passagesubmission',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='mcqquestion',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='mcqanswer',
            name='answer_text',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='passage',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='passage',
            name='time_limit',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='passagesubmission',
            name='passage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.passage'),
        ),
        migrations.AlterField(
            model_name='passagesubmission',
            name='score',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='passagesubmission',
            name='score_percentage',
            field=models.FloatField(default=0.0),
        ),
        migrations.AlterField(
            model_name='passagesubmission',
            name='submission_date',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='passagesubmission',
            name='time_taken',
            field=models.PositiveIntegerField(),
        ),
        migrations.AlterField(
            model_name='passagesubmission',
            name='total_questions',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='passagesubmission',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='passagesubmission',
            unique_together={('passage', 'user')},
        ),
        migrations.CreateModel(
            name='MCQSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passage_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mcq_submissions', to='api.passagesubmission')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mcqquestion')),
                ('selected_answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.mcqanswer')),
            ],
            options={
                'unique_together': {('passage_submission', 'question')},
            },
        ),
        migrations.CreateModel(
            name='WrittenPassageSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('written_score', models.PositiveIntegerField(default=0)),
                ('is_fully_reviewed', models.BooleanField(default=False)),
                ('passage_submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.passagesubmission')),
            ],
        ),
        migrations.CreateModel(
            name='WrittenQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_file', models.FileField(blank=True, null=True, upload_to='questions/', validators=[api.models.validate_file_size, api.models.validate_file_type])),
                ('question_format', models.CharField(choices=[('text', 'Text'), ('latex', 'LaTeX')], default='text', max_length=10)),
                ('question_type', models.CharField(choices=[('short', 'Short Response'), ('long', 'Long Response'), ('math_short', 'Math Short Response'), ('math_long', 'Math Long Response')], max_length=20)),
                ('max_points', models.PositiveIntegerField()),
                ('accepted_formats', models.JSONField(default=list)),
                ('created_at', models.DateTimeField()),
                ('passage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written_questions', to='api.passage')),
            ],
        ),
        migrations.CreateModel(
            name='WrittenSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField()),
                ('answer_file', models.FileField(blank=True, null=True, upload_to='submissions/', validators=[api.models.validate_file_size, api.models.validate_file_type])),
                ('format', models.CharField(choices=[('text', 'Text'), ('latex', 'LaTeX')], default='text', max_length=10)),
                ('score', models.PositiveIntegerField(blank=True, null=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('reviewed', models.BooleanField(default=False)),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.teacher')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.writtenquestion')),
                ('written_passage_submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written_submissions', to='api.writtenpassagesubmission')),
            ],
            options={
                'unique_together': {('written_passage_submission', 'question')},
            },
        ),
        migrations.DeleteModel(
            name='Submission',
        ),
    ]
